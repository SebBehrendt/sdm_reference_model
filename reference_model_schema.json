{
    "$defs": {
        "ActivityTypeEnum": {
            "description": "Enum to describe the type of an activity.",
            "enum": [
                "Start",
                "End",
                "StartInterupt",
                "EndInterupt"
            ],
            "title": "ActivityTypeEnum",
            "type": "string"
        },
        "AttributePredicate": {
            "description": "The SubmodelElementCollection \u201cAttributePredicate\u201d contains 4 SubmodelElements that allow to describe one specific process attribute in a structured, self-describing and interoperable way.\n\nArgs:\n    description (Optional[str]): The description of the attribute predicate.\n    id_short (Optional[str]): The short id of the attribute predicate.\n    semantic_id (Optional[str]): The semantic id of the attribute predicate.\n    attribute_carrier (str): Semantic reference to the general type of process or procedure that is describeded by this attribute, e.g. a semantic reference to a milling process definition.\n    general_attribute (str): Describes semantically the type of attribute that is specified for the attribute carrier, e.g. rotation speed.\n    predicate_type (str): Describes semantically what is specified by the value and how to compare it, e.g. requires_to_be, equals, within_range, ....\n    attribute_value (str): Describes value of the attribute that is specified for.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "attribute_carrier": {
                    "title": "Attribute Carrier",
                    "type": "string"
                },
                "general_attribute": {
                    "title": "General Attribute",
                    "type": "string"
                },
                "predicate_type": {
                    "title": "Predicate Type",
                    "type": "string"
                },
                "attribute_value": {
                    "title": "Attribute Value",
                    "type": "string"
                }
            },
            "required": [
                "id_short",
                "attribute_carrier",
                "general_attribute",
                "predicate_type",
                "attribute_value"
            ],
            "title": "AttributePredicate",
            "type": "object"
        },
        "BOM": {
            "description": "Submodel to describe the bill of materials of a product.\n\nArgs:\n    id (str): The id of the bill of materials.\n    description (Optional[str]): The description of the bill of materials.\n    id_short (Optional[str]): The short id of the bill of materials.\n    semantic_id (Optional[str]): The semantic id of the bill of materials.\n    sub_product_count (Optional[int]): The total number of subproducts (depht 1)\n    sub_products (Optional[List[SubmodelElementCollection]]): The list of subproducts contained in the product (depht 1)",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "sub_product_count": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Sub Product Count"
                },
                "sub_products": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/SubProduct"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Sub Products"
                }
            },
            "required": [
                "id_short",
                "id"
            ],
            "title": "BOM",
            "type": "object"
        },
        "BinomialDistribution": {
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "type": {
                    "const": "binomial",
                    "title": "Type",
                    "type": "string"
                },
                "trials": {
                    "title": "Trials",
                    "type": "integer"
                },
                "probability": {
                    "title": "Probability",
                    "type": "number"
                }
            },
            "required": [
                "id_short",
                "type",
                "trials",
                "probability"
            ],
            "title": "BinomialDistribution",
            "type": "object"
        },
        "Capabilities": {
            "description": "Submodel to describe the capabilities of a resource by describing available\nprocedures in the resource.\n\nArgs:\n    id (str): The id of the capabilities.\n    description (Optional[str]): The description of the capabilities.\n    id_short (Optional[str]): The short id of the capabilities.\n    semantic_id (Optional[str]): The semantic id of the capabilities.\n    procedure_ids (List[str]): The list of ids of procedure that are available for the resource.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "procedures_ids": {
                    "items": {
                        "type": "string"
                    },
                    "title": "Procedures Ids",
                    "type": "array"
                }
            },
            "required": [
                "id_short",
                "id",
                "procedures_ids"
            ],
            "title": "Capabilities",
            "type": "object"
        },
        "ChangeDriver": {
            "description": "The ChangeDriver represents a change driver of a change scenario.\n\nArgs:\n    id (str): The id of the change driver.\n    description (Optional[str]): The description of the change driver.\n    id_short (Optional[str]): The short id of the change driver.\n    sematic_id (Optional[str]): The semantic id of the change driver.\n    occurrence_distribution_function_over_time_horizon (ABSTRACT_REAL_DISTRIBUTION): The occurrence distribution function over the time horizon.\n    occurrence_distribution_per_unit_of_time (ABSTRACT_INTEGER_DISTRIBUTION): The occurrence distribution per unit of time.\n    frequency (float): The frequency of the change driver.\n    change_driver_influences (List[ChangeDriverInfluence]): The influences of the change driver on the receptor key figures.\n    influenced_receptor_key_figure_ids (List[str]): The ids of the receptor key figures that are influenced by the change driver.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "distribution_function_over_time_horizon": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/TriangularDistribution"
                        },
                        {
                            "$ref": "#/$defs/NormalDistribution"
                        },
                        {
                            "$ref": "#/$defs/ExponentialDistribution"
                        },
                        {
                            "$ref": "#/$defs/LognormalDistribution"
                        },
                        {
                            "$ref": "#/$defs/UniformDistribution"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Distribution Function Over Time Horizon"
                },
                "occurrence_distribution_per_unit_of_time": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/BinomialDistribution"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "frequency": {
                    "title": "Frequency",
                    "type": "number"
                },
                "change_driver_influences": {
                    "items": {
                        "$ref": "#/$defs/ChangeDriverInfluence"
                    },
                    "title": "Change Driver Influences",
                    "type": "array"
                },
                "influenced_receptor_key_figure_ids": {
                    "items": {
                        "type": "string"
                    },
                    "title": "Influenced Receptor Key Figure Ids",
                    "type": "array"
                }
            },
            "required": [
                "id_short",
                "frequency",
                "change_driver_influences",
                "influenced_receptor_key_figure_ids"
            ],
            "title": "ChangeDriver",
            "type": "object"
        },
        "ChangeDriverInfluence": {
            "description": "The ChangeDriverInfluence represents the influence of a change driver on a receptor key figure.\n\nArgs:\n    is_influenced (bool): True if the change driver influences the receptor key figure, False otherwise.\n    influenecing_change_driver_id (str): The id of the change driver that influences the receptor key figure.\n    influence_type (str): The type of the influence of the change driver on the receptor key figure.\n    influence_time (float): The time of the influence of the change driver on the receptor key figure.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "is_influenced": {
                    "title": "Is Influenced",
                    "type": "boolean"
                },
                "influenecing_change_driver_id": {
                    "title": "Influenecing Change Driver Id",
                    "type": "string"
                },
                "influence_type": {
                    "title": "Influence Type",
                    "type": "string"
                },
                "influence_time": {
                    "title": "Influence Time",
                    "type": "number"
                }
            },
            "required": [
                "id_short",
                "is_influenced",
                "influenecing_change_driver_id",
                "influence_type",
                "influence_time"
            ],
            "title": "ChangeDriverInfluence",
            "type": "object"
        },
        "ChangeScenario": {
            "description": "The ChangeScenario represents a change scenario for the configuration of a production system. It contains the change drivers and the\nreceptor key figures of the change scenario, thus describing how requirements on the production system change over time.\n\nMoreover, the change scenario holds constraints and options for reconfiguration of the production system, objectives of the change\nscenario and a list to found solutions.\n\nArgs:\n    id (str): The id of the change scenario.\n    description (Optional[str]): The description of the change scenario.\n    id_short (Optional[str]): The short id of the change scenario.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "scenario_model": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ScenarioModel"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "scenario_resources": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ScenarioResources"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "reconfiguration_constraints": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ReconfigurationConstraints"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "reconfiguration_options": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ReconfigurationOptions"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "reconfiguration_objectives": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ReconfigurationObjectives"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                }
            },
            "required": [
                "id_short",
                "id"
            ],
            "title": "ChangeScenario",
            "type": "object"
        },
        "ConstructionData": {
            "description": "Submodel to describe the construction data of a product.\n\nArgs:\n    id (str): The id of the construction data.\n    description (Optional[str]): The description of the construction data.\n    id_short (Optional[str]): The short id of the construction data.\n    semantic_id (Optional[str]): The semantic id of the construction data.\n    cad_file (Optional[str]): IRI to a CAD file of the product.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "cad_file": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Cad File"
                },
                "photo_file": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Photo File"
                }
            },
            "required": [
                "id_short",
                "id"
            ],
            "title": "ConstructionData",
            "type": "object"
        },
        "ContinuousRKF": {
            "description": "The ContinuousRKF represents a continuous receptor key figure.\n\nArgs:\n    absolute_influences_change_drivers (str): The absolute influences of the change drivers on the receptor key figure.\n    relative_influences_change_drivers (str): The relative influences of the change drivers on the receptor key figure.\n    slope_influences_change_drivers (str): The slope influences of the change drivers on the receptor key figure.\n    previous_slope (float): The previous slope of the receptor key figure.\n    previous_value (float): The previous value of the receptor key figure.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "absolute_influences_change_drivers": {
                    "title": "Absolute Influences Change Drivers",
                    "type": "string"
                },
                "relative_influences_change_drivers": {
                    "title": "Relative Influences Change Drivers",
                    "type": "string"
                },
                "slope_influences_change_drivers": {
                    "title": "Slope Influences Change Drivers",
                    "type": "string"
                },
                "previous_slope": {
                    "title": "Previous Slope",
                    "type": "number"
                },
                "previous_value": {
                    "title": "Previous Value",
                    "type": "number"
                }
            },
            "required": [
                "id_short",
                "absolute_influences_change_drivers",
                "relative_influences_change_drivers",
                "slope_influences_change_drivers",
                "previous_slope",
                "previous_value"
            ],
            "title": "ContinuousRKF",
            "type": "object"
        },
        "ControlLogic": {
            "description": "Submodel to describe the control logic of a resource, by describing its control policy. It specifies in which sequence the resource processes the products.\n\nArgs:\n    id (str): The id of the control logic.\n    id_short (str): The short id of the control logic.\n    description (Optional[str]): The description of the control logic.\n    semantic_id (Optional[str]): The semantic id of the control logic.\n    sequencing_policy (Literal[\"FIFO\", \"SPT_transport\", \"LIFO\", \"SPT\", \"EDD\", \"ODD\"]): The sequencing policy of the resource, determining in which sequence requests are processed.\n    routing_policy (Literal[\"random\", \"nearest\", \"shortest_queue\", \"alternating, \"round_robin\"]): The routing policy of the resource how redundant sub resources are used.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "sequencing_policy": {
                    "anyOf": [
                        {
                            "enum": [
                                "FIFO",
                                "SPT",
                                "LIFO",
                                "EDD",
                                "ODD"
                            ],
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Sequencing Policy"
                },
                "routing_policy": {
                    "anyOf": [
                        {
                            "enum": [
                                "random",
                                "nearest",
                                "shortest_queue",
                                "alternating",
                                "round_robin"
                            ],
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Routing Policy"
                }
            },
            "required": [
                "id_short",
                "id"
            ],
            "title": "ControlLogic",
            "type": "object"
        },
        "DiscreteRKF": {
            "description": "The DiscreteRKF represents a discrete receptor key figure.\n\nArgs:\n    value_for_occurence (str): The value for the occurence of the receptor key figure.\n    value_for_non_occurence (str): The value for the non-occurence of the receptor key figure.\n    previous_value (str): The previous value of the receptor key figure.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "value_for_occurence": {
                    "title": "Value For Occurence",
                    "type": "string"
                },
                "value_for_non_occurence": {
                    "title": "Value For Non Occurence",
                    "type": "string"
                },
                "previous_value": {
                    "title": "Previous Value",
                    "type": "string"
                }
            },
            "required": [
                "id_short",
                "value_for_occurence",
                "value_for_non_occurence",
                "previous_value"
            ],
            "title": "DiscreteRKF",
            "type": "object"
        },
        "DistributionTypeEnum": {
            "enum": [
                "normal",
                "traingular",
                "binomial",
                "exponential",
                "lognormal",
                "uniform"
            ],
            "title": "DistributionTypeEnum",
            "type": "string"
        },
        "EnergyInterface": {
            "description": "Interface for energy handling, e.g. if a product is passed to this resource, the EnergyInterface specifies the requried energy level.\n\nArgs:\n    voltage (float): The voltage of the energy interface.\n    current (float): The current of the energy interface.\n    power (float): The power of the energy interface.\n    current_type (str): The current type of the energy interface.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "voltage": {
                    "title": "Voltage",
                    "type": "number"
                },
                "current": {
                    "title": "Current",
                    "type": "number"
                },
                "nominal_power_consumption": {
                    "title": "Nominal Power Consumption",
                    "type": "number"
                },
                "peak_power_consumption": {
                    "title": "Peak Power Consumption",
                    "type": "number"
                },
                "standby_power_consumption": {
                    "title": "Standby Power Consumption",
                    "type": "number"
                },
                "current_type": {
                    "title": "Current Type",
                    "type": "string"
                }
            },
            "required": [
                "id_short",
                "voltage",
                "current",
                "nominal_power_consumption",
                "peak_power_consumption",
                "standby_power_consumption",
                "current_type"
            ],
            "title": "EnergyInterface",
            "type": "object"
        },
        "Event": {
            "description": "The Event class represents an event in the execution of a procedure. It contains the time of the event, the resource that executed the event, the procedure that was executed, the activity that was executed, the product that was produced, and whether the event was successful or not.\n\nArgs:\n    time (float): The time of the event.\n    resource_id (str): The id of the resource that executed the event.\n    procedure_id (str): The id of the procedure that was executed.\n    procedure_type (ProcedureTypeEnum): The type of the procedure that was executed.\n    activity (str): The activity that was executed.\n    product_id (Optional[str]): The id of the product that was produced.\n    expected_end_time (Optional[float]): The expected end time of the event.\n    actual_end_time (Optional[float]): The actual end time of the event.\n    success (Optional[bool]): Whether the event was successful or not.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "time": {
                    "title": "Time",
                    "type": "string"
                },
                "resource_id": {
                    "title": "Resource Id",
                    "type": "string"
                },
                "procedure_id": {
                    "title": "Procedure Id",
                    "type": "string"
                },
                "procedure_type": {
                    "$ref": "#/$defs/ProcedureTypeEnum"
                },
                "activity": {
                    "$ref": "#/$defs/ActivityTypeEnum"
                },
                "product_id": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Product Id"
                },
                "expected_end_time": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Expected End Time"
                },
                "actual_end_time": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Actual End Time"
                },
                "success": {
                    "anyOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Success"
                }
            },
            "required": [
                "id_short",
                "time",
                "resource_id",
                "procedure_id",
                "procedure_type",
                "activity"
            ],
            "title": "Event",
            "type": "object"
        },
        "EventLog": {
            "description": "Defines a log of events that have occurred in the system.\n\nArgs:\n    event_log (List[Event]): The list of events that have occurred in the system.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "event_log": {
                    "items": {
                        "$ref": "#/$defs/Event"
                    },
                    "title": "Event Log",
                    "type": "array"
                }
            },
            "required": [
                "id_short",
                "id",
                "event_log"
            ],
            "title": "EventLog",
            "type": "object"
        },
        "ExecutionModel": {
            "description": "The ExecutionModel represents all planned (scheduled) and performed (executed) execution of a process. It contains the schedule of the process, and the execution log of the process.\n\nArgs:\n    id (str): The id of the execution model.\n    description (Optional[str]): The description of the execution model.\n    id_short (Optional[str]): The short id of the execution model.\n    semantic_id (Optional[str]): The semantic id of the execution model.\n    schedule (List[Event]): The schedule of the procedure.\n    execution_log (List[Event]): The execution log of the procedure.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "schedule": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/Event"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Schedule"
                },
                "execution_log": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/Event"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Execution Log"
                }
            },
            "required": [
                "id_short",
                "id"
            ],
            "title": "ExecutionModel",
            "type": "object"
        },
        "ExponentialDistribution": {
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "type": {
                    "const": "exponential",
                    "title": "Type",
                    "type": "string"
                },
                "mean": {
                    "title": "Mean",
                    "type": "number"
                }
            },
            "required": [
                "id_short",
                "type",
                "mean"
            ],
            "title": "ExponentialDistribution",
            "type": "object"
        },
        "GeneralInformation": {
            "description": "Submodel to describe the general information of an order.\n\nArgs:\n    id (str): The id of the general information.\n    description (Optional[str]): The description of the general information.\n    id_short (Optional[str]): The short id of the general information.\n    semantic_id (Optional[str]): The semantic id of the general information.\n    order_id (str): The id of the order.\n    priority (int): The priority of the order.\n    customer_information (str): The customer information of the order.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "order_id": {
                    "title": "Order Id",
                    "type": "string"
                },
                "priority": {
                    "title": "Priority",
                    "type": "integer"
                },
                "customer_information": {
                    "title": "Customer Information",
                    "type": "string"
                }
            },
            "required": [
                "id_short",
                "id",
                "order_id",
                "priority",
                "customer_information"
            ],
            "title": "GeneralInformation",
            "type": "object"
        },
        "GreenHouseGasEmission": {
            "description": "Submodel collection containing information about the greenhouse gas emission of a procedure in kilogram of CO2-equivalents.\n\nArgs:\n    emission_scope_one (Optional[float]): The greenhouse gas emission of scope 1.\n    emission_scope_two (Optional[float]): The greenhouse gas emission of scope 2.\n    emission_scope_three (Optional[float]): The greenhouse gas emission of scope 3.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "emission_scope_one": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Emission Scope One"
                },
                "emission_scope_two": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Emission Scope Two"
                },
                "emission_scope_three": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Emission Scope Three"
                }
            },
            "required": [
                "id_short"
            ],
            "title": "GreenHouseGasEmission",
            "type": "object"
        },
        "InformationInterface": {
            "description": "Interface for information exchange with the resource.\n\nArgs:\n    protocol (str): The protocol of the information interface.\n    adress (str): The adress of the information interface (e.g. IP adress)\n    port (Optional[int]): The port of the information interface.\n    endpoint (Optional[str]): Specifies, the endpoint that to interface requires (e.g. topic, rest Endpoint or OPC UA Node id)",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "protocol": {
                    "title": "Protocol",
                    "type": "string"
                },
                "host": {
                    "title": "Host",
                    "type": "string"
                },
                "port": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Port"
                },
                "endpoint": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Endpoint"
                }
            },
            "required": [
                "id_short",
                "protocol",
                "host"
            ],
            "title": "InformationInterface",
            "type": "object"
        },
        "KPI": {
            "description": "Defines a Key Performance Indicator (KPI) that can be used to describe the performance of the system.\n\nArgs:\n    name (KPIEnum): The name of the KPI.\n    target (Literal[\"min\", \"max\"]): The target of the KPI.\n    weight (Optional[float], optional): The weight of the KPI. Defaults to 1.\n    value (Optional[float], optional): The value of the KPI. Defaults to None.\n    context (Optional[Tuple[KPILevelEnum, ...]], optional): The context of the KPI specified by KPI levels to which the KPI applies. Defaults to None.\n    resource (Optional[str], optional): The resource to which the KPI applies. Defaults to None.\n    product (Optional[str], optional): The product to which the KPI applies. Defaults to None.\n    process (Optional[str], optional): The process to which the KPI applies. Defaults to None.\n    start_time (Optional[float], optional): The start time of the KPI. Defaults to None.\n    end_time (Optional[float], optional): The end time of the KPI. Defaults to None.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "name": {
                    "$ref": "#/$defs/KPIEnum"
                },
                "target": {
                    "enum": [
                        "min",
                        "max"
                    ],
                    "title": "Target",
                    "type": "string"
                },
                "weight": {
                    "default": 1.0,
                    "title": "Weight",
                    "type": "number"
                },
                "value": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Value"
                },
                "context": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/KPILevelEnum"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Context"
                },
                "resource": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Resource"
                },
                "product": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Product"
                },
                "process": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Process"
                },
                "start_time": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Start Time"
                },
                "end_time": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "End Time"
                }
            },
            "required": [
                "id_short",
                "name",
                "target"
            ],
            "title": "KPI",
            "type": "object"
        },
        "KPIEnum": {
            "description": "Defines the KPIs that can be used in the system (based on DIN ISO 22400).",
            "enum": [
                "output",
                "throughput",
                "cost",
                "WIP",
                "throughput_time",
                "processing_time",
                "productive_time",
                "standby_time",
                "setup_time",
                "unscheduled_downtime",
                "dynamic_WIP",
                "dynamic_throughput_time"
            ],
            "title": "KPIEnum",
            "type": "string"
        },
        "KPILevelEnum": {
            "description": "Defines the levels on which a KPI can be measured.",
            "enum": [
                "system",
                "resource",
                "all_products",
                "product_type",
                "product",
                "process"
            ],
            "title": "KPILevelEnum",
            "type": "string"
        },
        "KeyPerformanceIndicators": {
            "description": "Defines a collection of Key Performance Indicators (KPIs) that can be used to describe the performance of the system.\n\nArgs:\n    kpis (List[KPI]): The list of KPIs.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "kpis": {
                    "items": {
                        "$ref": "#/$defs/KPI"
                    },
                    "title": "Kpis",
                    "type": "array"
                }
            },
            "required": [
                "id_short",
                "id",
                "kpis"
            ],
            "title": "KeyPerformanceIndicators",
            "type": "object"
        },
        "KeyPoint": {
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "position": {
                    "items": {
                        "type": "number"
                    },
                    "maxItems": 3,
                    "minItems": 2,
                    "title": "Position",
                    "type": "array"
                },
                "orientation": {
                    "items": {
                        "type": "number"
                    },
                    "maxItems": 4,
                    "minItems": 2,
                    "title": "Orientation",
                    "type": "array"
                },
                "procedure_id": {
                    "title": "Procedure Id",
                    "type": "string"
                }
            },
            "required": [
                "id_short",
                "position",
                "orientation",
                "procedure_id"
            ],
            "title": "KeyPoint",
            "type": "object"
        },
        "Location": {
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "resource_id": {
                    "title": "Resource Id",
                    "type": "string"
                },
                "resource_name": {
                    "title": "Resource Name",
                    "type": "string"
                },
                "x": {
                    "title": "X",
                    "type": "number"
                },
                "y": {
                    "title": "Y",
                    "type": "number"
                },
                "z": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Z"
                },
                "latitude": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Latitude"
                },
                "longitude": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Longitude"
                },
                "valid_from": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Valid From"
                },
                "valid_to": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Valid To"
                }
            },
            "required": [
                "id_short",
                "resource_id",
                "resource_name",
                "x",
                "y"
            ],
            "title": "Location",
            "type": "object"
        },
        "LognormalDistribution": {
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "type": {
                    "const": "lognormal",
                    "title": "Type",
                    "type": "string"
                },
                "mean": {
                    "title": "Mean",
                    "type": "number"
                },
                "std": {
                    "title": "Std",
                    "type": "number"
                }
            },
            "required": [
                "id_short",
                "type",
                "mean",
                "std"
            ],
            "title": "LognormalDistribution",
            "type": "object"
        },
        "MaterialDirectionType": {
            "description": "Enum to describe the direction of material flow in a material interface.",
            "enum": [
                "IN",
                "OUT",
                "INOUT"
            ],
            "title": "MaterialDirectionType",
            "type": "string"
        },
        "MaterialInterface": {
            "description": "Interface for material handling, e.g. if a product is passed to this resource, the MaterialInterface specifies the requried position and orientation\nof the product (each in 2D or 3D coordinates).\n\nArgs:\n    position (conlist(float, min_length=2, max_length=3)): The position of the material interface.\n    orientation (conlist(float, min_length=2, max_length=3)): The orientation of the material interface.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "position": {
                    "items": {
                        "type": "number"
                    },
                    "maxItems": 3,
                    "minItems": 2,
                    "title": "Position",
                    "type": "array"
                },
                "orientation": {
                    "items": {
                        "type": "number"
                    },
                    "maxItems": 3,
                    "minItems": 2,
                    "title": "Orientation",
                    "type": "array"
                },
                "key_points": {
                    "items": {
                        "$ref": "#/$defs/KeyPoint"
                    },
                    "title": "Key Points",
                    "type": "array"
                },
                "direction": {
                    "$ref": "#/$defs/MaterialDirectionType",
                    "default": "INOUT"
                }
            },
            "required": [
                "id_short",
                "position",
                "orientation",
                "key_points"
            ],
            "title": "MaterialInterface",
            "type": "object"
        },
        "ModellingEnum": {
            "enum": [
                "discrete",
                "continuous"
            ],
            "title": "ModellingEnum",
            "type": "string"
        },
        "NormalDistribution": {
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "type": {
                    "const": "normal",
                    "title": "Type",
                    "type": "string"
                },
                "mean": {
                    "title": "Mean",
                    "type": "number"
                },
                "std": {
                    "title": "Std",
                    "type": "number"
                }
            },
            "required": [
                "id_short",
                "type",
                "mean",
                "std"
            ],
            "title": "NormalDistribution",
            "type": "object"
        },
        "Objective": {
            "description": "The Objective represents an objective of the change scenario.\n\nArgs:\n    description (Optional[str]): The description of the objective.\n    id_short (Optional[str]): The short id of the objective.\n    sematic_id (Optional[str]): The semantic id of the objective.\n    type (KPIEnum): The type of the objective.\n    weight (float): The weight of the objective.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "type": {
                    "$ref": "#/$defs/KPIEnum"
                },
                "weight": {
                    "title": "Weight",
                    "type": "number"
                }
            },
            "required": [
                "id_short",
                "type",
                "weight"
            ],
            "title": "Objective",
            "type": "object"
        },
        "Order": {
            "description": "AAS to describe an order.\n\nArgs:\n    id (str): The id of the order.\n    description (Optional[str]): The description of the order.\n    id_short (Optional[str]): The short id of the order.\n    product_instances (ProductInstances): The product instances of the order.\n    general_information (GeneralInformation): The general information of the order.\n    order_schedule (OrderSchedule): The schedule of the order.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "general_information": {
                    "$ref": "#/$defs/GeneralInformation"
                },
                "order_schedule": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/OrderSchedule"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "ordered_products": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/OrderedProducts"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                }
            },
            "required": [
                "id_short",
                "id",
                "general_information"
            ],
            "title": "Order",
            "type": "object"
        },
        "OrderSchedule": {
            "description": "Submodel to describe the schedule of an order.\n\nArgs:\n    id (str): The id of the order schedule.\n    description (Optional[str]): The description of the order schedule.\n    id_short (Optional[str]): The short id of the order schedule.\n    semantic_id (Optional[str]): The semantic id of the order schedule.\n    release_time (str): The release time of the order (ISO 8601 datetime).\n    due_time (str): The due time of the order (ISO 8601 datetime).\n    target_time (str): The target time of the order (ISO 8601 datetime).",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "release_time": {
                    "title": "Release Time",
                    "type": "string"
                },
                "due_time": {
                    "title": "Due Time",
                    "type": "string"
                },
                "target_time": {
                    "title": "Target Time",
                    "type": "string"
                }
            },
            "required": [
                "id_short",
                "id",
                "release_time",
                "due_time",
                "target_time"
            ],
            "title": "OrderSchedule",
            "type": "object"
        },
        "OrderedProduct": {
            "description": "Submodel that describes the product instances of an order with reference to their AAS.\n\nArgs:\n    description (Optional[str]): The description of the product instances.\n    id_short (Optional[str]): The short id of the product instances.\n    semantic_id (Optional[str]): The semantic id of the product instances.\n    product_type (str): Product type of the order.\n    target_quantity (int): Number of requested product instances\n    product_ids (List[str]): Reference to the AAS of the product instances of the order.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "product_type": {
                    "title": "Product Type",
                    "type": "string"
                },
                "target_quantity": {
                    "title": "Target Quantity",
                    "type": "integer"
                },
                "product_ids": {
                    "default": [],
                    "items": {
                        "type": "string"
                    },
                    "title": "Product Ids",
                    "type": "array"
                }
            },
            "required": [
                "id_short",
                "product_type",
                "target_quantity"
            ],
            "title": "OrderedProduct",
            "type": "object"
        },
        "OrderedProducts": {
            "description": "Submodel that describes the product instances of an order with reference to their AAS.\n\nArgs:\n    id (str): The id of the product instances.\n    description (Optional[str]): The description of the product instances.\n    id_short (Optional[str]): The short id of the product instances.\n    semantic_id (Optional[str]): The semantic id of the product instances.\n    ordered_products (List[OrderedProduct]): The list of ordered products specifying the ordered type and the quantity of the product type. .",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "ordered_products": {
                    "items": {
                        "$ref": "#/$defs/OrderedProduct"
                    },
                    "title": "Ordered Products",
                    "type": "array"
                }
            },
            "required": [
                "id_short",
                "id",
                "ordered_products"
            ],
            "title": "OrderedProducts",
            "type": "object"
        },
        "Performance": {
            "description": "AAS to describe the performance of a production system.\n\nArgs:\n    key_performance_indicators (KeyPerformanceIndicators): The Key Performance Indicators (KPIs) that describe the performance of the system.\n    event_log (Optional[EventLog], optional): A log of events that have occurred in the system. Defaults to None.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "key_performance_indicators": {
                    "$ref": "#/$defs/KeyPerformanceIndicators"
                },
                "event_log": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/EventLog"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                }
            },
            "required": [
                "id_short",
                "id",
                "key_performance_indicators"
            ],
            "title": "Performance",
            "type": "object"
        },
        "Procedure": {
            "description": "The Procedure class represents a procedure that is executed by a resource. It contains the process\nattributes, the execution model, and the time model of the procedure.\n\nArgs:\n    id (str): The id of the procedure.\n    description (Optional[str]): The description of the procedure.\n    id_short (Optional[str]): The short id of the procedure.\n    process_attributes (processes.ProcessAttributes): Parameters that describe what the procedure does and how it does it.\n    execution (ExecutionModel): The execution model of the procedure containing planned and performed executions of this procedure.\n    time_model (TimeModel): The time model of the procedure containing parameters to represent the timely duration of the procedure.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "procedure_information": {
                    "$ref": "#/$defs/ProcedureInformation"
                },
                "process_attributes": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ProcessAttributes"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "execution_model": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ExecutionModel"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "time_model": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/TimeModel"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "procedure_consumption": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ProcedureConsumption"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                }
            },
            "required": [
                "id_short",
                "id",
                "procedure_information"
            ],
            "title": "Procedure",
            "type": "object"
        },
        "ProcedureConsumption": {
            "description": "Submodel containing the specification of a procedure.\n\nArgs:\n    power_consumption (Optional[float]): The power consumption of the procedure.\n    water_consumption (Optional[float]): The water consumption of the procedure.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "power_consumption": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Power Consumption"
                },
                "water_consumption": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Water Consumption"
                }
            },
            "required": [
                "id_short",
                "id"
            ],
            "title": "ProcedureConsumption",
            "type": "object"
        },
        "ProcedureInformation": {
            "description": "Submodel containing general information about the procedure.\n\nArgs:\n    procedure_type (ProcedureTypeEnum): The type of the procedure.\n    name (Optional[str]): The name of the procedure.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "procedure_type": {
                    "$ref": "#/$defs/ProcedureTypeEnum"
                },
                "name": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Name"
                }
            },
            "required": [
                "id_short",
                "id",
                "procedure_type"
            ],
            "title": "ProcedureInformation",
            "type": "object"
        },
        "ProcedureTypeEnum": {
            "description": "Enum to describe the type of a procedure.",
            "enum": [
                "Production",
                "Transport",
                "Loading",
                "Setup",
                "Breakdown",
                "Maintenance",
                "StandBy",
                "Waiting",
                "Off",
                "NonScheduled",
                "OrderRelease",
                "OrderShipping"
            ],
            "title": "ProcedureTypeEnum",
            "type": "string"
        },
        "Process": {
            "description": "Class to describe a process that is required to produce a product. A process can comprise of multiple sub-processes, described by the process model. With the process attributes, it is specified which attributes are relevant for the process to generate the required transformations of a product.\n\nArgs:\n    id (str): The id of the process.\n    description (Optional[str]): The description of the process.\n    id_short (Optional[str]): The short id of the process.\n    general_Info (GeneralInfo): The general information of the process (e.g. type of process, ...)\n    process_model (ProcessModel): The process model of the process (e.g. sequence of sub-processes, ...)\n    process_attributes (ProcessAttributes): The process attributes of the process (e.g. rotation speed, ...)",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "process_information": {
                    "$ref": "#/$defs/ProcessInformation"
                },
                "process_model": {
                    "$ref": "#/$defs/ProcessModel"
                },
                "process_attributes": {
                    "$ref": "#/$defs/ProcessAttributes"
                }
            },
            "required": [
                "id_short",
                "id",
                "process_information",
                "process_model",
                "process_attributes"
            ],
            "title": "Process",
            "type": "object"
        },
        "ProcessAttributes": {
            "description": "The SubmodelElementCollection \u201cProcessAttributes\u201d contains 4 SubmodelElements that allow to describe one specific process attribute in a structured, self-describing and interoperable way.\n\nArgs:\n    id (str): The id of the process attributes.\n    description (Optional[str]): The description of the process attributes.\n    id_short (Optional[str]): The short id of the process attributes.\n    semantic_id (Optional[str]): The semantic id of the process attributes.\n    process_attributes (List[AttributePredicate]): The process attributes of the process (e.g. rotation speed, ...)",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "process_attributes": {
                    "items": {
                        "$ref": "#/$defs/AttributePredicate"
                    },
                    "title": "Process Attributes",
                    "type": "array"
                }
            },
            "required": [
                "id_short",
                "id",
                "process_attributes"
            ],
            "title": "ProcessAttributes",
            "type": "object"
        },
        "ProcessInformation": {
            "description": "The SubmodelElementCollection GeneralInfo contains 4 SubmodelElements that allow to describe one specific process attribute in a structured, self-describing and interoperable way.\nThe types are defined by DIN 8580 for Manufacturing Processes, VDI 2411 for Material Flow Processes, VDI 2243 for Remanufacturing Processes and VDI 2860 for Assembly.\n\nArgs:\n    id (str): The id of the general info.\n    description (Optional[str]): The description of the process.\n    id_short (Optional[str]): The short id of the process.\n    semantic_id (Optional[str]): The semantic id of the process.\n    general_type (Literal[\"Manufacturing\", \"Material Flow\", \"Remanufacturing\", \"Assembly\", \"Other\"]): The general type of process or procedure that is describeded by this attribute.\n    manufacturing_process_type (Optional[Literal[\"Primary Shaping\", \"Forming\", \"Cutting\", \"Joining\", \"Coating\", \"Changing Material Properties\"]]): The type of manufacturing process according to DIN 8580.\n    material_flow_process_type (Optional[Literal[\"Storage\", \"Handling\", \"Conveying\"]]): The type of material flow process according to VDI 2411.\n    remanufacturing_process_type (Optional[Literal[\"Disassembly\", \"Remediation\", \"Cleaning\", \"Inspection\"]]): The type of remanufacturing process according to VDI 2243.\n    assembly_process_type (Optional[Literal[\"Joining\", \"Handling\", \"Adjusting\", \"Testing\", \"Special Operations\"]]): The type of assembly process according to VDI 2860.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "general_type": {
                    "enum": [
                        "Manufacturing",
                        "Material Flow",
                        "Remanufacturing",
                        "Assembly"
                    ],
                    "title": "General Type",
                    "type": "string"
                },
                "manufacturing_process_type": {
                    "anyOf": [
                        {
                            "enum": [
                                "Primary Shaping",
                                "Forming",
                                "Cutting",
                                "Joining",
                                "Coating",
                                "Changing Material Properties"
                            ],
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Manufacturing Process Type"
                },
                "material_flow_process_type": {
                    "anyOf": [
                        {
                            "enum": [
                                "Storage",
                                "Handling",
                                "Conveying"
                            ],
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Material Flow Process Type"
                },
                "remanufacturing_process_type": {
                    "anyOf": [
                        {
                            "enum": [
                                "Disassembly",
                                "Remediation",
                                "Cleaning",
                                "Inspection"
                            ],
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Remanufacturing Process Type"
                },
                "assembly_process_type": {
                    "anyOf": [
                        {
                            "enum": [
                                "Joining",
                                "Handling",
                                "Adjusting",
                                "Testing",
                                "Special Operations"
                            ],
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Assembly Process Type"
                },
                "name": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Name"
                }
            },
            "required": [
                "id_short",
                "id",
                "general_type"
            ],
            "title": "ProcessInformation",
            "type": "object"
        },
        "ProcessModel": {
            "description": "The SubmodelElementCollection \u201cProcessModel\u201d contains 4 SubmodelElements that allow to describe one specific process attribute in a structured, self-describing and interoperable way.\n\nArgs:\n    id (str): The id of the process model.\n    description (Optional[str]): The description of the process model.\n    id_short (Optional[str]): The short id of the process model.\n    semantic_id (Optional[str]): The semantic id of the process model.\n    type_ (ProcessModelType): The type of the process model.\n    sequence (Optional[List[str]]): The sequence of the process model (for Sequential process model type) with ids of the subprocesses.\n    nodes (Optional[List[str]]): The nodes of the process model (for Graph process model type) with ids of the subprocesses.\n    edges (Optional[List[Tuple[str, str]]]): The edges of the process model (for Graph process model type) with ids of the subprocesses.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "type_": {
                    "$ref": "#/$defs/ProcessModelType"
                },
                "sequence": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Sequence"
                },
                "nodes": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Nodes"
                },
                "edges": {
                    "anyOf": [
                        {
                            "items": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Edges"
                }
            },
            "required": [
                "id_short",
                "id",
                "type_"
            ],
            "title": "ProcessModel",
            "type": "object"
        },
        "ProcessModelType": {
            "description": "Enum to describe the type of process model.",
            "enum": [
                "Single",
                "Sequential",
                "Graph"
            ],
            "title": "ProcessModelType",
            "type": "string"
        },
        "ProcessReference": {
            "description": "Submodel to reference process to create a product.\n\nArgs:\n    id (str): The id of the process reference.\n    description (Optional[str]): The description of the process reference.\n    id_short (Optional[str]): The short id of the process reference.\n    semantic_id (Optional[str]): The semantic id of the process reference.\n    process_id (str): reference to the process to create the product\n    alternative_process_ids (Optional[List[str]]): alternative processes to create the product",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "process_id": {
                    "title": "Process Id",
                    "type": "string"
                },
                "alternative_processes_ids": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Alternative Processes Ids"
                }
            },
            "required": [
                "id_short",
                "id",
                "process_id"
            ],
            "title": "ProcessReference",
            "type": "object"
        },
        "Product": {
            "description": "AAS to describe a product.\n\nArgs:\n    id (str): The id of the product.\n    description (Optional[str]): The description of the product.\n    id_short (Optional[str]): The short id of the product.\n    semantic_id (Optional[str]): The semantic id of the product.\n    construction_data (Optional[ConstructionData]): The construction data of the product.\n    bom (Optional[BOM]): The bill of materials of the product.\n    process_reference (Optional[ProcessReference]): The process reference of the product.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "product_information": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ProductInformation"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "construction_data": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ConstructionData"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "bom": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/BOM"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "process_reference": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ProcessReference"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "tracking_data": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/TrackingData"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                }
            },
            "required": [
                "id_short",
                "id"
            ],
            "title": "Product",
            "type": "object"
        },
        "ProductInformation": {
            "description": "Submodel to describe general information of the product.\n\nArgs:\n    id (str): The id of the product general information.\n    description (Optional[str]): The description of the product general information.\n    id_short (Optional[str]): The short id of the product general information.\n    semantic_id (Optional[str]): The semantic id of the product general information.\n    product_type (str): The type of the product.\n    manufacturer (str): The manufacturer of the product.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "product_type": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Product Type"
                },
                "manufacturer": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Manufacturer"
                },
                "name": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Name"
                },
                "maintenance_manual": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Maintenance Manual"
                },
                "operating_manual": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Operating Manual"
                },
                "disassembly_manual": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Disassembly Manual"
                },
                "green_house_gas_emission": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/GreenHouseGasEmission"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                }
            },
            "required": [
                "id_short",
                "id"
            ],
            "title": "ProductInformation",
            "type": "object"
        },
        "ProductReference": {
            "description": "Submodel to describe the emission of a resource.\n\nArgs:\n    name (str): Name of the tool that is used for a process.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "product_reference_id": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Product Reference Id"
                }
            },
            "required": [
                "id_short",
                "id"
            ],
            "title": "ProductReference",
            "type": "object"
        },
        "ProductUseType": {
            "description": "Enum to describe how a subproduct is used in the product.",
            "enum": [
                "assembled",
                "unassembled",
                "consumed"
            ],
            "title": "ProductUseType",
            "type": "string"
        },
        "ReceptorEnum": {
            "enum": [
                "quantity",
                "cost",
                "time",
                "product",
                "technology",
                "quality"
            ],
            "title": "ReceptorEnum",
            "type": "string"
        },
        "ReceptorKeyFigure": {
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "receptor_type": {
                    "$ref": "#/$defs/ReceptorEnum"
                },
                "modelling_type": {
                    "$ref": "#/$defs/ModellingEnum"
                },
                "unit": {
                    "title": "Unit",
                    "type": "string"
                },
                "value": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/DiscreteRKF"
                        },
                        {
                            "$ref": "#/$defs/ContinuousRKF"
                        }
                    ],
                    "title": "Value"
                }
            },
            "required": [
                "id_short",
                "receptor_type",
                "modelling_type",
                "unit",
                "value"
            ],
            "title": "ReceptorKeyFigure",
            "type": "object"
        },
        "ReconfigurationConstraints": {
            "description": "The ReconfigurationConstraints represents the constraints for the reconfiguration of the production system.\n\nArgs:\n    max_reconfiguration_cost (float): The maximum cost of reconfiguration of the production system.\n    max_reconfiguration_time (float): The maximum time of reconfiguration of the production system.\n    max_number_of_machines (int): The maximum number of machines of the production system.\n    max_number_of_transport_resources (int): The maximum number of transport resources of the production system.\n    max_number_of_process_model_per_resource (int): The maximum number of process models per resource of the production system.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "max_reconfiguration_cost": {
                    "title": "Max Reconfiguration Cost",
                    "type": "number"
                },
                "max_reconfiguration_time": {
                    "title": "Max Reconfiguration Time",
                    "type": "number"
                },
                "max_number_of_machines": {
                    "title": "Max Number Of Machines",
                    "type": "integer"
                },
                "max_number_of_transport_resources": {
                    "title": "Max Number Of Transport Resources",
                    "type": "integer"
                },
                "max_number_of_process_modules_per_resource": {
                    "title": "Max Number Of Process Modules Per Resource",
                    "type": "integer"
                }
            },
            "required": [
                "id_short",
                "id",
                "max_reconfiguration_cost",
                "max_reconfiguration_time",
                "max_number_of_machines",
                "max_number_of_transport_resources",
                "max_number_of_process_modules_per_resource"
            ],
            "title": "ReconfigurationConstraints",
            "type": "object"
        },
        "ReconfigurationEnum": {
            "description": "# from prodsys\nEnum that represents the different levels of reconfigurations that are possible.\n\n- ProductionCapacity: Reconfiguration of production capacity (number of machines and their configuration)\n- TransportCapacity: Reconfiguration of transport capacity (number of transport resources and their configuration)\n- Layout: Reconfiguration of layout (only position of resources)\n- SequencingLogic: Reconfiguration of sequencing logic (only the control policy of resources)\n- RoutingLogic: Reconfiguration of routing logic (only the routing heuristic of routers)",
            "enum": [
                "full",
                "production_capacity",
                "transport_capacity",
                "layout",
                "sequencing_logic",
                "routing_logic"
            ],
            "title": "ReconfigurationEnum",
            "type": "string"
        },
        "ReconfigurationObjectives": {
            "description": "The ReconfigurationObjectives represents the objectives of the change scenario.\n\nArgs:\n    id (str): The id of the reconfiguration objectives.\n    description (Optional[str]): The description of the reconfiguration objectives.\n    id_short (Optional[str]): The short id of the reconfiguration objectives.\n    sematic_id (Optional[str]): The semantic id of the reconfiguration objectives.\n    objectives (List[Objective]): The objectives of the change scenario.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "objectives": {
                    "items": {
                        "$ref": "#/$defs/Objective"
                    },
                    "title": "Objectives",
                    "type": "array"
                }
            },
            "required": [
                "id_short",
                "id",
                "objectives"
            ],
            "title": "ReconfigurationObjectives",
            "type": "object"
        },
        "ReconfigurationOptions": {
            "description": "The ReconfigurationOptions represents the options for the reconfiguration of the production system.\n\nArgs:\n    id (str): The id of the reconfiguration option.\n    description (Optional[str]): The description of the reconfiguration option.\n    id_short (Optional[str]): The short id of the reconfiguration option.\n    sematic_id (Optional[str]): The semantic id of the reconfiguration option.\n    reconfiguration_type (ReconfigurationEnum): The type of reconfiguration that is possible.\n    machine_controllers (List[Literal[\"FIFO\", \"LIFO\", \"SPT\"]]): The machine controllers that are possible.\n    transport_controllers (List[Literal[\"FIFO\", \"SPT_transport\"]]): The transport controllers that are possible.\n    routing_heuristics (List[Literal[\"shortest_queue\", \"random\"]]): The routing heuristics that are possible.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "reconfiguration_type": {
                    "$ref": "#/$defs/ReconfigurationEnum"
                },
                "machine_controllers": {
                    "items": {
                        "enum": [
                            "FIFO",
                            "LIFO",
                            "SPT"
                        ],
                        "type": "string"
                    },
                    "title": "Machine Controllers",
                    "type": "array"
                },
                "transport_controllers": {
                    "items": {
                        "enum": [
                            "FIFO",
                            "SPT_transport"
                        ],
                        "type": "string"
                    },
                    "title": "Transport Controllers",
                    "type": "array"
                },
                "routing_heuristics": {
                    "items": {
                        "enum": [
                            "shortest_queue",
                            "random"
                        ],
                        "type": "string"
                    },
                    "title": "Routing Heuristics",
                    "type": "array"
                }
            },
            "required": [
                "id_short",
                "id",
                "reconfiguration_type",
                "machine_controllers",
                "transport_controllers",
                "routing_heuristics"
            ],
            "title": "ReconfigurationOptions",
            "type": "object"
        },
        "Resource": {
            "description": "AAS to describe a resource.\n\nArgs:\n    id (str): The id of the resource.\n    description (Optional[str]): The description of the resource.\n    id_short (Optional[str]): The short id of the resource.\n    resource_information (Optional[ResourceInformation]): some general information describing the resource.\n    capabilities (Optional[Capabilities]): The capabilities of the resource, containing information about available procedures.\n    construction_data (Optional[ConstructionData]): The construction data of the resource.\n    resource_configuration (Optional[ResourceHierarchy]): The configruation of the resource, containting information about sub resources.\n    control_logic (Optional[ControlLogic]): The control logic of the resource.\n    resource_interface (Optional[ResourceInterfaces]): the interfaces of the resource.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "resource_information": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ResourceInformation"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "capabilities": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/Capabilities"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "construction_data": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ConstructionData"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "resource_configuration": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ResourceConfiguration"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "control_logic": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ControlLogic"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "resource_interface": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ResourceInterfaces"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "resource_performances": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ResourcePerformances"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "resource_location_history": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ResourceLocationHistory"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "product_reference": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ProductReference"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                }
            },
            "required": [
                "id_short",
                "id"
            ],
            "title": "Resource",
            "type": "object"
        },
        "ResourceConfiguration": {
            "description": "Submodel to describe the configuration of a resource, by describing its sub resources and their position and orientation.\n\nArgs:\n    id (str): The id of the resource hierarchy.\n    description (Optional[str]): The description of the resource hierarchy.\n    id_short (Optional[str]): The short id of the resource hierarchy.\n    semantic_id (Optional[str]): The semantic id of the resource hierarchy.\n    sub_resources (Optional[List[SubResource]]): IDs ob sub resources",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "sub_resources": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/SubResource"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Sub Resources"
                },
                "resource_links": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/ResourceLink"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Resource Links"
                },
                "status": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ResourceStatus"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                }
            },
            "required": [
                "id_short",
                "id"
            ],
            "title": "ResourceConfiguration",
            "type": "object"
        },
        "ResourceInformation": {
            "description": "Submodel to describe the general information of a resource.\n\nArgs:\n    id (str): The id of the general information.\n    description (Optional[str]): The description of the general information.\n    id_short (Optional[str]): The short id of the general information.\n    semantic_id (Optional[str]): The semantic id of the general information.\n    name (Optional[str]): The name of the resource.\n    manufacturer (Optional[str]): The manufacturer of the resource.\n    production_level (Literal[\"Module\", \"Station\", \"System\", \"Plant\", \"Network\"]): The production level of the resource.\n    resource_type (Literal[\"Manufacturing\", \"Material Flow\", \"Storage\"]): The type of the resource.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "name": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Name"
                },
                "manufacturer": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Manufacturer"
                },
                "production_level": {
                    "enum": [
                        "Module",
                        "Station",
                        "System",
                        "Plant",
                        "Network"
                    ],
                    "title": "Production Level",
                    "type": "string"
                },
                "resource_type": {
                    "enum": [
                        "Manufacturing",
                        "Material Flow",
                        "Storage",
                        "Barrier",
                        "Empty Spot",
                        "Source",
                        "Sink"
                    ],
                    "title": "Resource Type",
                    "type": "string"
                }
            },
            "required": [
                "id_short",
                "id",
                "production_level",
                "resource_type"
            ],
            "title": "ResourceInformation",
            "type": "object"
        },
        "ResourceInterfaces": {
            "description": "Submodel to describe the interfaces of a resource to connect to the resource either by energy, information or material.\n\nArgs:\n    id (str): The id of the resource interfaces.\n    description (Optional[str]): The description of the resource interfaces.\n    id_short (Optional[str]): The short id of the resource interfaces.\n    semantic_id (Optional[str]): The semantic id of the resource interfaces.\n    information_interface (Optional[List[CommunicationInterface]]): The communication interfaces of the resource.\n    material_interfaces (Optional[List[MaterialInterface]]): The material interfaces of the resource.\n    energy_interfaces (Optional[List[EnergyInterface]]): The energy interfaces of the resource.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "information_interface": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/InformationInterface"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Information Interface"
                },
                "material_interfaces": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/MaterialInterface"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Material Interfaces"
                },
                "energy_interfaces": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/EnergyInterface"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Energy Interfaces"
                }
            },
            "required": [
                "id_short",
                "id"
            ],
            "title": "ResourceInterfaces",
            "type": "object"
        },
        "ResourceLink": {
            "description": "SubmodelElementCollection to describe the status of a resource.\n\nArgs:\n    description (Optional[str]): The description of the status.\n    id_short (Optional[str]): The short id of the status.\n    semantic_id (Optional[str]): The semantic id of the status.\n    origin_resource_id (str): The id of the origin resource.\n    target_resource_id (str): The id of the target resource.\n    link_type (Literal[\"Directional\", \"Bidirectional\"]): The type of the link.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "origin_resource_id": {
                    "title": "Origin Resource Id",
                    "type": "string"
                },
                "target_resource_id": {
                    "title": "Target Resource Id",
                    "type": "string"
                },
                "link_type": {
                    "enum": [
                        "Directional",
                        "Bidirectional"
                    ],
                    "title": "Link Type",
                    "type": "string"
                }
            },
            "required": [
                "id_short",
                "origin_resource_id",
                "target_resource_id",
                "link_type"
            ],
            "title": "ResourceLink",
            "type": "object"
        },
        "ResourceLocationHistory": {
            "description": "Submodel to describe the location history of a resource.\n\nArgs:\n    id (str): The id of the location history.\n    description (Optional[str]): The description of the location history.\n    id_short (Optional[str]): The short id of the location history.\n    semantic_id (Optional[str]): The semantic id of the location history.\n    locations (Optional[List[Location]]): The location history of the resource.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "locations": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/Location"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Locations"
                }
            },
            "required": [
                "id_short",
                "id"
            ],
            "title": "ResourceLocationHistory",
            "type": "object"
        },
        "ResourcePerformance": {
            "description": "Submodel to make a reference to the Peroformance of a resource.\n\nArgs:\n    description (Optional[str]): The description of the resource performance.\n    id_short (Optional[str]): The short id of the resource performance.\n    semantic_id (Optional[str]): The semantic id of the resource performance.\n    performance_id (Optional[str]): The id of the performance AAS of the resource.\n    associated_configuration_id (Optional[str]): The id of the configuration AAS of the resource.\n    obtained_performance_from (str): The tool / software used to obtain the results.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "performance_id": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Performance Id"
                },
                "associated_configuration_id": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Associated Configuration Id"
                },
                "obtained_performance_from": {
                    "title": "Obtained Performance From",
                    "type": "string"
                }
            },
            "required": [
                "id_short",
                "obtained_performance_from"
            ],
            "title": "ResourcePerformance",
            "type": "object"
        },
        "ResourcePerformances": {
            "description": "Submodel to describe the performance of a resource.\n\nArgs:\n    id (str): The id of the resource performance.\n    description (Optional[str]): The description of the resource performance.\n    id_short (Optional[str]): The short id of the resource performance.\n    semantic_id (Optional[str]): The semantic id of the resource performance.\n    resource_performance (Optional[List[ResourcePerformance]]): The performances of the resource.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "resource_performance": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/ResourcePerformance"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Resource Performance"
                }
            },
            "required": [
                "id_short",
                "id"
            ],
            "title": "ResourcePerformances",
            "type": "object"
        },
        "ResourceStatus": {
            "description": "SubmodelElementCollection to describe the status of a resource.\n\nArgs:\n    description (Optional[str]): The description of the status.\n    id_short (Optional[str]): The short id of the status.\n    semantic_id (Optional[str]): The semantic id of the status.\n    status (ProcedureTypeEnum): The status of the resource.\n    status_start (Optional[str]): The start time of the status (ISO 8601 time stamp).",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "status": {
                    "$ref": "#/$defs/ProcedureTypeEnum"
                },
                "status_start": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Status Start"
                }
            },
            "required": [
                "id_short",
                "status"
            ],
            "title": "ResourceStatus",
            "type": "object"
        },
        "ScenarioModel": {
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "change_drivers": {
                    "items": {
                        "$ref": "#/$defs/ChangeDriver"
                    },
                    "title": "Change Drivers",
                    "type": "array"
                },
                "receptor_key_figures": {
                    "items": {
                        "$ref": "#/$defs/ReceptorKeyFigure"
                    },
                    "title": "Receptor Key Figures",
                    "type": "array"
                }
            },
            "required": [
                "id_short",
                "id",
                "change_drivers",
                "receptor_key_figures"
            ],
            "title": "ScenarioModel",
            "type": "object"
        },
        "ScenarioResources": {
            "description": "The ResourceReferenceSubmodel represents a reference to a resource.\n\nArgs:\n    id (str): The id of the resource reference.\n    description (Optional[str]): The description of the resource reference.\n    id_short (Optional[str]): The short id of the resource reference.\n    sematic_id (Optional[str]): The semantic id of the resource reference.\n    base_id (str): The id of the base production system.\n    solution_ids (List[str]): The ids of the resources that are solutions of the optimization.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "base_id": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Base Id"
                },
                "solution_ids": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Solution Ids"
                }
            },
            "required": [
                "id_short",
                "id"
            ],
            "title": "ScenarioResources",
            "type": "object"
        },
        "SubProduct": {
            "description": "SubmodelElementCollection to describe a subproduct of a product with reference to its AAS, status informatino and quantity.\n\nArgs:\n    description (Optional[str]): The description of the subproduct.\n    id_short (Optional[str]): The short id of the subproduct.\n    semantic_id (Optional[str]): The semantic id of the subproduct.\n    product_type (str): The type of the subproduct.\n    product_id (str): The AAS reference of the subproduct.\n    status (Literal[\"assembled\", \"unassembled\"]): The status of the subproduct.\n    quantity (int): The quantity of the subproduct(s).",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "product_type": {
                    "title": "Product Type",
                    "type": "string"
                },
                "product_id": {
                    "title": "Product Id",
                    "type": "string"
                },
                "product_use_type": {
                    "$ref": "#/$defs/ProductUseType"
                },
                "quantity": {
                    "title": "Quantity",
                    "type": "integer"
                }
            },
            "required": [
                "id_short",
                "product_type",
                "product_id",
                "product_use_type",
                "quantity"
            ],
            "title": "SubProduct",
            "type": "object"
        },
        "SubResource": {
            "description": "SubmodelElementCollection to describe a subresource of a resource with reference to its AAS, position and orientation (2D or 3D).\n\nArgs:\n    description (Optional[str]): The description of the subresource.\n    id_short (Optional[str]): The short id of the subresource.\n    semantic_id (Optional[str]): The semantic id of the subresource.\n    resource_id (str): The id of the subresource.\n    position (conlist(float, min_length=2, max_length=3)): The position of the subresource (x, y, z).\n    orientation (conlist(float, min_length=1, max_length=3)): The orientation of the subresource (alpha, beta, gamma).",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "resource_id": {
                    "title": "Resource Id",
                    "type": "string"
                },
                "position": {
                    "items": {
                        "type": "number"
                    },
                    "maxItems": 3,
                    "minItems": 2,
                    "title": "Position",
                    "type": "array"
                },
                "orientation": {
                    "items": {
                        "type": "number"
                    },
                    "maxItems": 3,
                    "minItems": 1,
                    "title": "Orientation",
                    "type": "array"
                }
            },
            "required": [
                "id_short",
                "resource_id",
                "position",
                "orientation"
            ],
            "title": "SubResource",
            "type": "object"
        },
        "TimeModel": {
            "description": "Submodel containing parameters to represent the timely duration of a procedure. All times are specified in minutes unless otherwise stated.\n\nArgs:\n    id (str): The id of the time model.\n    description (Optional[str]): The description of the time model.\n    id_short (Optional[str]): The short id of the time model.\n    semantic_id (Optional[str]): The semantic id of the time model.\n    type_ (Literal[\"sequential\", \"distribution\", \"distance_based\"]): The type of the time model.\n    sequence (Optional[List[float]]): The sequence of timely values (only for sequential time models).\n    repeat (Optional[bool]): Whether the sequence is repeated or not (only for sequential time models).\n    distribution_type (Optional[str]): The name of the distribution (e.g. \"normal\", \"exponential\", \"weibull\", \"lognormal\", \"gamma\", \"beta\", \"uniform\", \"triangular\", \"discrete\") (only for distribution time models).\n    distribution_parameters (Optional[List[float]]): The parameters of the distribution (1: location, 2: scale, 3 and 4: shape) (only for distribution time models).\n    speed (Optional[float]): The speed of the resource (only for distance-based time models) in m / s.\n    rotation_speed (Optional[float]): The rotation speed of the resource (only for distance-based time models) in degree / s.\n    reaction_time (Optional[float]): The reaction time of the resource (only for distance-based time models) in s.\n    acceleration (Optional[float]): The acceleration of the resource (only for distance-based time models) in m^2/s.\n    deceleration (Optional[float]): The deceleration of the resource (only for distance-based time models) in m^2/s.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "type_": {
                    "enum": [
                        "sequential",
                        "distribution",
                        "distance_based"
                    ],
                    "title": "Type",
                    "type": "string"
                },
                "sequence": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "number"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Sequence"
                },
                "repeat": {
                    "anyOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Repeat"
                },
                "distribution_type": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/DistributionTypeEnum"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "distribution_parameters": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/TriangularDistribution"
                        },
                        {
                            "$ref": "#/$defs/NormalDistribution"
                        },
                        {
                            "$ref": "#/$defs/ExponentialDistribution"
                        },
                        {
                            "$ref": "#/$defs/LognormalDistribution"
                        },
                        {
                            "$ref": "#/$defs/UniformDistribution"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Distribution Parameters"
                },
                "speed": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Speed"
                },
                "rotation_speed": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Rotation Speed"
                },
                "reaction_time": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Reaction Time"
                },
                "acceleration": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Acceleration"
                },
                "deceleration": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Deceleration"
                },
                "transport_times": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/TransportTime"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Transport Times"
                }
            },
            "required": [
                "id_short",
                "id",
                "type_"
            ],
            "title": "TimeModel",
            "type": "object"
        },
        "TrackingData": {
            "description": "Submodel to describe tracking data of a product.\n\nArgs:\n    id (str): The id of the tracking data.\n    description (Optional[str]): The description of the tracking data.\n    id_short (Optional[str]): The short id of the tracking data.\n    semantic_id (Optional[str]): The semantic id of the tracking data.\n    execution_log (Optional[List[Event]]): The execution log of the product containing all events of the product.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "execution_log": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/Event"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Execution Log"
                }
            },
            "required": [
                "id_short",
                "id"
            ],
            "title": "TrackingData",
            "type": "object"
        },
        "TransportTime": {
            "description": "This class represents a transport time where the required time for transport between and origin and a target is specified.\n\nArgs:\n    origin_id (str): Id of the resource where the transport starts\n    target_id (str): Id of the resource where the transport ends\n    transport_time (float): Time needed for the transport in seconds.",
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "origin_id": {
                    "title": "Origin Id",
                    "type": "string"
                },
                "target_id": {
                    "title": "Target Id",
                    "type": "string"
                },
                "transport_time": {
                    "title": "Transport Time",
                    "type": "number"
                }
            },
            "required": [
                "id_short",
                "origin_id",
                "target_id",
                "transport_time"
            ],
            "title": "TransportTime",
            "type": "object"
        },
        "TriangularDistribution": {
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "type": {
                    "const": "traingular",
                    "title": "Type",
                    "type": "string"
                },
                "lowerBound": {
                    "title": "Lowerbound",
                    "type": "number"
                },
                "upperBound": {
                    "title": "Upperbound",
                    "type": "number"
                },
                "mode": {
                    "title": "Mode",
                    "type": "number"
                }
            },
            "required": [
                "id_short",
                "type",
                "lowerBound",
                "upperBound",
                "mode"
            ],
            "title": "TriangularDistribution",
            "type": "object"
        },
        "UniformDistribution": {
            "properties": {
                "id_short": {
                    "title": "Id Short",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "semantic_id": {
                    "default": "",
                    "title": "Semantic Id",
                    "type": "string"
                },
                "type": {
                    "const": "uniform",
                    "title": "Type",
                    "type": "string"
                },
                "mean": {
                    "title": "Mean",
                    "type": "number"
                }
            },
            "required": [
                "id_short",
                "type",
                "mean"
            ],
            "title": "UniformDistribution",
            "type": "object"
        }
    },
    "properties": {
        "product": {
            "default": [],
            "items": {
                "$ref": "#/$defs/Product"
            },
            "title": "Product",
            "type": "array"
        },
        "resource": {
            "default": [],
            "items": {
                "$ref": "#/$defs/Resource"
            },
            "title": "Resource",
            "type": "array"
        },
        "procedure": {
            "default": [],
            "items": {
                "$ref": "#/$defs/Procedure"
            },
            "title": "Procedure",
            "type": "array"
        },
        "process": {
            "default": [],
            "items": {
                "$ref": "#/$defs/Process"
            },
            "title": "Process",
            "type": "array"
        },
        "order": {
            "default": [],
            "items": {
                "$ref": "#/$defs/Order"
            },
            "title": "Order",
            "type": "array"
        },
        "performance": {
            "default": [],
            "items": {
                "$ref": "#/$defs/Performance"
            },
            "title": "Performance",
            "type": "array"
        },
        "change_scenario": {
            "anyOf": [
                {
                    "$ref": "#/$defs/ChangeScenario"
                },
                {
                    "type": "null"
                }
            ],
            "default": null
        }
    },
    "title": "ReferenceModel",
    "type": "object"
}